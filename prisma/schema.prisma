// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Member {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  password  String
  profiles  Profile[]
}

model Profile {
  id                    Int             @id @default(autoincrement())
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  username              String
  avatar                String?
  phoneNumber           String?         @unique
  birthdate             DateTime?
  isEmailVerified       Boolean         @default(false)
  isPhoneNumberVerified Boolean         @default(false)
  isDormant             Boolean         @default(false)
  gender                Gender?         @default(NONE)
  loginType             LoginType
  membershipLevel       MembershipLevel @default(FREE)
  jwtToken              JwtToken?
  member                Member          @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId              Int
  service               Service?

  @@index([memberId])
}

model Service {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  serviceName String
  serviceCode String
  profile     Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId   Int      @unique
}

model JwtToken {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  accessToken         String
  refreshToken        String
  isAccessTokenValid  Boolean  @default(true)
  isRefreshTokenValid Boolean  @default(true)
  profile             Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId           Int      @unique
}

enum Gender {
  MALE
  FEMALE
  NONE
}

enum MembershipLevel {
  FREE
  PREMIUM
  VIP
}

enum LoginType {
  EMAIL
  GOOGLE
  NAVER
  KAKAO
  FACEBOOK
  APPLE
}
